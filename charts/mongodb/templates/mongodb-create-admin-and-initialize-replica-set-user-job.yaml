{{- if .Values.global.initializeDummyData }}
apiVersion: batch/v1
kind: Job
metadata:
  name: initialize-replica-set
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    spec:
      initContainers:
        - name: wait-for-mongo
          image: busybox
          command: [ "sh", "-c", "until nc -z mongodb 27017 > /dev/null; do echo Waiting for mongo.; sleep 5; done;" ]
      containers:
        - name: initialize-replica-set
          image: {{ .Values.mongoImageName }}:{{ .Values.mongoVersion }}
          env:
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: MONGO_INITDB_ROOT_PASSWORD
                  name: mongodb-secret-{{ .Release.Name }}-env
            - name: MONGODB_USERNAME
              valueFrom:
                secretKeyRef:
                  key: MONGO_INITDB_ROOT_USERNAME
                  name: mongodb-secret-{{ .Release.Name }}-env
          command:
            - /bin/bash
            - -c
            - >
              mongosh "mongodb://$MONGODB_USERNAME:$MONGODB_PASSWORD@mongodb.{{ .Release.Namespace }}:27017"
              --eval "rs.initiate({_id: 'rs0', members: [{ _id: 0, host: 'localhost:27017' }]});";
      restartPolicy: Never
  backoffLimit: 50
{{- end }}