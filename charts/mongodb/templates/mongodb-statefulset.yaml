apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    io.kompose.network/rocket_database_network: "true"
    io.kompose.service: mongodb
  name: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mongodb
  template:
    metadata:
      labels:
        io.kompose.network/rocket_database_network: "true"
        io.kompose.service: mongodb
    spec:
      initContainers:
        - name: add-keyfile
          image: {{ .Values.mongoImageName }}:{{ .Values.mongoVersion }}
          command: ["bash", "-c"]
          args:
            - >
              cp /data/replica.key.tmp /data/key/replica.key &&
              chmod 400 /data/key/replica.key &&
              chown mongodb:mongodb /data/key/replica.key
          volumeMounts:
            - mountPath: /data/replica.key.tmp
              subPath: replica.key.tmp
              name: replica-key
            - mountPath: /data/key
              name: mongodb-data
      containers:
        - args:
          - --bind_ip_all
          - --oplogSize
          - "128"
          - --replSet
          - rs0
          - --keyFile
          - /data/key/replica.key
          - --wiredTigerCacheSizeGB
          - {{ .Values.wiredTigerCacheSizeGB | quote }}
          env:
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: MONGO_INITDB_ROOT_PASSWORD
                  name: mongodb-secret-{{ .Release.Name }}-env
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  key: MONGO_INITDB_ROOT_USERNAME
                  name: mongodb-secret-{{ .Release.Name }}-env
          image: {{ .Values.mongoImageName }}:{{ .Values.mongoVersion }}
          ports:
            - containerPort: 27017
          name: mongodb
          resources: {}
          volumeMounts:
            - mountPath: /data/db
              name: mongodb-data
            - mountPath: /data/key
              name: mongodb-data
      restartPolicy: Always
      volumes:
        - name: mongodb-data
          persistentVolumeClaim:
            claimName: mongodb-data
        - name: replica-key
          secret:
            secretName: mongodb-replica-{{ .Release.Name }}-secret
  serviceName: mongodb