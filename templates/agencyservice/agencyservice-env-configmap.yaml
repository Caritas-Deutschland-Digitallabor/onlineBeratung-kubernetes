apiVersion: v1
data:
  CSRF_COOKIE_PROPERTY:  {{ .Values.csrfCookieProperty }}
  CSRF_HEADER_PROPERTY: {{ .Values.csrfHeaderProperty }}
  KEYCLOAK_CORS: "false"
  KEYCLOAK_AUTH_SERVER_URL: {{ .Values.keycloakAuthServerUrl }}
  KEYCLOAK_PRINCIPAL_ATTRIBUTE: {{ .Values.keycloakPrincipalAttribute }}
  KEYCLOAK_REALM: {{ .Values.keycloakRealm }}
  KEYCLOAK_RESOURCE: {{ .Values.agencyServiceKeycloakResource }}
  KEYCLOAKSERVICE_ADMIN_CLIENTID: {{ .Values.keycloakserviceAdminClientid }}
  KEYCLOAKSERVICE_APP_CLIENTID: {{ .Values.keycloakserviceAppClientid }}
  {{- if .Values.global.useExternalMariaDb }}
  SPRING_DATASOURCE_URL: "jdbc:mariadb://{{ .Values.global.mariaDbHost }}:3306/agencyservice"
  {{- else }}
  SPRING_DATASOURCE_URL: "jdbc:mariadb://mariadb.{{ .Release.Namespace }}:3306/agencyservice"
  {{- end }}
  SPRING_PROFILES_ACTIVE: {{ .Values.agencyServiceSpringProfilesActive }}
  AGENCY_DELETEWORKFLOW_CRON: {{ .Values.agencyServiceDeleteWorkflowCron }}
  CONSULTING_TYPE_SERVICE_API_URL: "http://consultingtypeservice.{{ .Release.Namespace }}:8080"
  TENANT_SERVICE_API_URL: "http://tenantservice.{{ .Release.Namespace }}:8080"
  MULTITENANCY_ENABLED: {{ .Values.global.multitenancyEnabled | quote }}
  FEATURE_TOPICS_ENABLED: {{ .Values.global.topicsEnabled | quote }}
  FEATURE_DEMOGRAPHICS_ENABLED: {{ .Values.global.demographicsEnabled | quote }}
  JAVA_OPTS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"
  USER_ADMIN_SERVICE_API_URL: "http://userservice.{{ .Release.Namespace }}:8080"
  FEATURE_APPOINTMENT_ENABLED: {{ .Values.global.appointmentsEnabled | quote }}
  APPOINTMENT_SERVICE_API_URL: "http://appointmentservice.{{ .Release.Namespace }}:8080"
  FEATURE_MULTITENANCY_WITH_SINGLE_DOMAIN_ENABLED: {{ .Values.global.multitenancyWithSingleDomainEnabled | quote }}
  TOMCAT_UTIL_HTTP_PARSER_HTTPPARSER_REQUESTTARGETALLOW: "|{}"
  {{- if .Values.global.enableTls }}
  APP_BASE_URL: "https://{{ .Values.global.domainName }}"
{{- else }}
  APP_BASE_URL: "http://{{ .Values.global.domainName }}"
{{- end }}
kind: ConfigMap
metadata:
  labels:
    io.kompose.service: agencyservice-{{ .Release.Name }}-env
  name: agencyservice-{{ .Release.Name }}-env
